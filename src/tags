$(NAME	Makefile	/^$(NAME): $(OBJECTS) $(RUNDIR)$/
$(OBDIR)adapt.o	Makefile	/^$(OBDIR)adapt.o: adapt.cpp $(HEADER)$/
$(OBDIR)amrsolver.o	Makefile	/^$(OBDIR)amrsolver.o: amrsolver.cpp $(HEADER)$/
$(OBDIR)block.o	Makefile	/^$(OBDIR)block.o: block.cpp $(HEADER)$/
$(OBDIR)boundary.o	Makefile	/^$(OBDIR)boundary.o: boundary.cpp $(HEADER)$/
$(OBDIR)field.o	Makefile	/^$(OBDIR)field.o: field.cpp $(HEADER)$/
$(OBDIR)ghost.o	Makefile	/^$(OBDIR)ghost.o: ghost.cpp $(HEADER)$/
$(OBDIR)input.o	Makefile	/^$(OBDIR)input.o: input.cpp $(HEADER)$/
$(OBDIR)multigrid.o	Makefile	/^$(OBDIR)multigrid.o: multigrid.cpp $(HEADER)$/
$(OBDIR)octree.o	Makefile	/^$(OBDIR)octree.o: octree.cpp $(HEADER)$/
$(OBDIR)octreegrid.o	Makefile	/^$(OBDIR)octreegrid.o: octreegrid.cpp $(HEADER)$/
$(OBDIR)output.o	Makefile	/^$(OBDIR)output.o: output.cpp $(HEADER)$/
$(OBDIR)poisson.o	Makefile	/^$(OBDIR)poisson.o: poisson.cpp $(HEADER)$/
$(OBDIR)vecfield.o	Makefile	/^$(OBDIR)vecfield.o: vecfield.cpp $(HEADER)$/
$(OBDIR)vtk.o	Makefile	/^$(OBDIR)vtk.o: vtk.cpp $(HEADER)$/
$(RUNDIR	Makefile	/^$(RUNDIR): $/
.DEFAULT	Makefile	/^.DEFAULT:$/
AMRSOLVER_BOUNDARY_H	boundary.h	2
AMRSOLVER_INPUT_H	input.h	2
BOTTOM_GHOST	domain.h	14
BOUNDARY	boundary.h	10
Block	block.h	27
Block::Block	block.cpp	/^Block::Block() {$/
Block::Block	block.cpp	/^Block::Block(const Block &obj) {$/
Block::dx	block.h	58
Block::dy	block.h	58
Block::dz	block.h	58
Block::field	block.h	32
Block::flag	block.h	61
Block::iNx	block.h	51
Block::iNy	block.h	52
Block::iNz	block.h	53
Block::max_gradient	block.h	39
Block::mesh	block.h	31
Block::scalarfields	block.h	35
Block::vectorfields	block.h	36
Block::x_centre	block.h	43
Block::x_max	block.h	44
Block::x_min	block.h	44
Block::y_centre	block.h	43
Block::y_max	block.h	45
Block::y_min	block.h	45
Block::z_centre	block.h	43
Block::z_max	block.h	46
Block::z_min	block.h	46
Block::~Block	block.cpp	/^Block::~Block() {$/
CORNER	domain.h	8
CXX	Makefile	/^CXX	:=	mpic++$/
CXXFLAGS	Makefile	/^CXXFLAGS:= 	-g  -Wall -O3 -fno-elide-constructors$/
DOMAIN	domain.h	15
DOMAIN_H	domain.h	2
Dir	direction.h	13
EAST_GHOST	domain.h	9
Field	field.h	11
Field::Field	field.cpp	/^Field::Field() {$/
Field::Field	field.cpp	/^Field::Field(const Field &obj) {$/
Field::bc	field.h	22
Field::name	field.h	21
Field::set_field	field.cpp	/^void Field::set_field(double value) {$/
Field::~Field	field.cpp	/^ Field::~Field() {$/
FieldBc	boundary.h	25
HEADER	Makefile	/^HEADER 	:= octreegrid.h adapt.h octree.h block.h f/
INCPATH	Makefile	/^INCPATH	=	-I ~\/ $/
LEFT	direction.h	18
LFLAGS	Makefile	/^LFLAGS	:=	$(LIBPATH) $(LIBS) $/
LIBPATH	Makefile	/^LIBPATH	= 	-L ~\/$/
LIBS	Makefile	/^LIBS	=	-lm  $/
MPI_BOUNDARY	boundary.h	11
MULTIGRID_H	multigrid.h	2
MYOCTREE_ADAPT_H	adapt.h	2
MYOCTREE_MYOCTREE_H	octreegrid.h	2
MYOCTREE_OCTREE_H_	octree.h	2
MYOCTREE_OUTPUT_H	vtk.h	2
Mamrsolver.cpp	amrsolver.cpp	/^int main(int argc, char **argv) {$/
Mask	domain.h	19
N	field.h	18
N	vecfield.h	20
NAME	Makefile	/^NAME 	:= amrsolver$/
NONE	boundary.h	9
NORTH_GHOST	domain.h	11
NodeBc	boundary.h	14
Nx	field.h	17
Nx	vecfield.h	19
Ny	field.h	17
Ny	vecfield.h	19
Nz	field.h	17
Nz	vecfield.h	19
OBDIR	Makefile	/^OBDIR	:= ..\/obj\/$/
OBJECTS	Makefile	/^OBJECTS =   $(OBDIR)amrsolver.o $(OBDIR)octreegrid/
Octree	octree.h	27
Octree::Octree	octree.cpp	/^Octree::Octree(const Octree &obj) {$/
Octree::Octree	octree.cpp	/^Octree::Octree( double x1, double x2, double y1, d/
Octree::Octree	octree.cpp	/^Octree::Octree() {$/
Octree::bc	octree.h	87
Octree::block_data	octree.h	113
Octree::children	octree.h	111
Octree::contains	octree.cpp	/^bool Octree::contains(double x, double y, double z/
Octree::get_block_data	octree.cpp	/^Block* Octree::get_block_data() {$/
Octree::get_child_at	octree.cpp	/^Octree* Octree::get_child_at(int i, int j, int k) /
Octree::get_level	octree.cpp	/^int Octree::get_level() {$/
Octree::get_parent	octree.cpp	/^Octree* Octree::get_parent() {$/
Octree::get_relative_location	octree.cpp	/^void Octree::get_relative_location(int* i, int* j,/
Octree::isRootNode	octree.cpp	/^bool Octree::isRootNode() {$/
Octree::level	octree.h	117
Octree::neighbour	octree.h	76
Octree::number	octree.h	107
Octree::parent	octree.h	115
Octree::refine	octree.cpp	/^void Octree::refine() {$/
Octree::setToCoarsen	octree.h	65
Octree::setToRefine	octree.h	63
Octree::set_child_null_at	octree.cpp	/^void Octree::set_child_null_at(int i, int j, int k/
Octree::set_to_coarsen_with_nesting	octree.cpp	/^void Octree::set_to_coarsen_with_nesting() {$/
Octree::set_to_refine_with_nesting	octree.cpp	/^void Octree::set_to_refine_with_nesting() {$/
Octree::x_centre	octree.h	100
Octree::x_max	octree.h	101
Octree::x_min	octree.h	101
Octree::y_centre	octree.h	100
Octree::y_max	octree.h	102
Octree::y_min	octree.h	102
Octree::z_centre	octree.h	100
Octree::z_max	octree.h	103
Octree::z_min	octree.h	103
Octree::~Octree	octree.cpp	/^Octree::~Octree() {$/
OctreeGrid	octreegrid.cpp	/^void OctreeGrid() {$/
POISSON_H	poisson.h	2
Pos	direction.h	21
RIGHT	direction.h	17
RUNDIR	Makefile	/^RUNDIR	:= ..\/output\/$/
SOUTH_GHOST	domain.h	12
TOP_GHOST	domain.h	13
VecField	vecfield.h	13
VecField::VecField	vecfield.cpp	/^VecField::VecField() {$/
VecField::VecField	vecfield.cpp	/^VecField::VecField(const VecField &obj) {$/
VecField::name	vecfield.h	31
VecField::set_field	vecfield.cpp	/^void VecField::set_field(double value) {$/
VecField::xbc	vecfield.h	35
VecField::ybc	vecfield.h	36
VecField::zbc	vecfield.h	37
VecField::~VecField	vecfield.cpp	/^ VecField::~VecField() {$/
WEST_GHOST	domain.h	10
XDIR	direction.h	7
YDIR	direction.h	8
ZDIR	direction.h	9
adapt_gradient	amrsolver.cpp	/^void adapt_gradient() {$/
amrsolver	amrsolver.cpp	16
amrsolver	ghost.cpp	28
amrsolver	multigrid.cpp	32
amrsolver	poisson.cpp	20
amrsolver::Trilinear_interpolate	multigrid.cpp	/^double Trilinear_interpolate(double x0,double x1, /
amrsolver::exchange_ghost_val	ghost.cpp	/^void exchange_ghost_val(int level, std::string nam/
amrsolver::jacobi	poisson.cpp	/^void jacobi(int level, std::string name) {$/
amrsolver::set_initial_field	amrsolver.cpp	/^void set_initial_field() {$/
clean	Makefile	/^clean: 		$/
coarsen_nodes	adapt.cpp	/^void coarsen_nodes() {$/
copy	Makefile	/^copy:$/
create_list_of_root_nodes	octreegrid.cpp	/^void create_list_of_root_nodes() {$/
create_lists_of_level_nodes	octreegrid.cpp	/^void create_lists_of_level_nodes() {$/
create_node	octreegrid.cpp	/^void create_node(int blocknumber, double xmin, dou/
direction	direction.h	5
dirichlet	boundary.h	19
domain_flags	domain.h	6
exchange_ghost_values_of_level	octreegrid.cpp	/^void exchange_ghost_values_of_level(int level) {$/
field_boundary_flags	boundary.h	16
gauss_seidel	poisson.cpp	/^void gauss_seidel(int level, std::string name) {$/
gauss_seidel_black	poisson.cpp	/^double gauss_seidel_black(Octree* node, Field* f, /
gauss_seidel_red	poisson.cpp	/^double gauss_seidel_red(Octree* node, Field* f, do/
jacobi_for_field	poisson.cpp	/^double jacobi_for_field(Octree* node, Field* f, do/
mpi_boundary	boundary.h	21
multigrid	multigrid.cpp	/^void multigrid(std::string name) {$/
myOctree	adapt.cpp	6
myOctree	block.cpp	5
myOctree	boundary.cpp	6
myOctree	field.cpp	2
myOctree	octree.cpp	5
myOctree	octreegrid.cpp	10
myOctree	vecfield.cpp	2
myOctree	vtk.cpp	6
myOctree::BOTTOM_GHOST	multigrid.cpp	27
myOctree::Block	multigrid.cpp	11
myOctree::Block::Block	block.cpp	/^Block::Block( double x1, double x2, double y1, dou/
myOctree::Block::iNx	block.cpp	13
myOctree::Block::iNy	block.cpp	14
myOctree::Block::iNz	block.cpp	15
myOctree::DOMAIN	multigrid.cpp	28
myOctree::EAST_GHOST	multigrid.cpp	22
myOctree::Field	amrsolver.cpp	11
myOctree::Field	ghost.cpp	7
myOctree::Field	multigrid.cpp	8
myOctree::Field	poisson.cpp	9
myOctree::Field::Field	field.cpp	/^Field::Field( int N_x, int N_y, int N_z, std::stri/
myOctree::LEFT	ghost.cpp	22
myOctree::LEFT	multigrid.cpp	20
myOctree::NONE	ghost.cpp	25
myOctree::NORTH_GHOST	multigrid.cpp	24
myOctree::Octree	amrsolver.cpp	10
myOctree::Octree	ghost.cpp	9
myOctree::Octree	multigrid.cpp	10
myOctree::Octree	output.cpp	7
myOctree::Octree	poisson.cpp	11
myOctree::Octree::isLeafNode	octree.cpp	/^bool Octree::isLeafNode() {$/
myOctree::RIGHT	ghost.cpp	21
myOctree::RIGHT	multigrid.cpp	19
myOctree::SOUTH_GHOST	multigrid.cpp	25
myOctree::TOP_GHOST	multigrid.cpp	26
myOctree::VecField	amrsolver.cpp	12
myOctree::VecField	ghost.cpp	8
myOctree::VecField	multigrid.cpp	9
myOctree::VecField	poisson.cpp	10
myOctree::VecField::VecField	vecfield.cpp	/^VecField::VecField( int N_x, int N_y, int N_z, std/
myOctree::WEST_GHOST	multigrid.cpp	23
myOctree::XDIR	ghost.cpp	18
myOctree::XDIR	multigrid.cpp	16
myOctree::YDIR	ghost.cpp	19
myOctree::YDIR	multigrid.cpp	17
myOctree::ZDIR	ghost.cpp	20
myOctree::ZDIR	multigrid.cpp	18
myOctree::create_list_of_leaf_nodes	octreegrid.cpp	/^void create_list_of_leaf_nodes() {$/
myOctree::get_point	vtk.cpp	/^long int get_point(int i, int j, int k, int Npx, i/
myOctree::leaf_nodes	octreegrid.cpp	15
myOctree::level_nodes	ghost.cpp	10
myOctree::level_nodes	multigrid.cpp	13
myOctree::level_nodes	octreegrid.cpp	17
myOctree::level_nodes	poisson.cpp	18
myOctree::max_level	adapt.cpp	8
myOctree::max_level	octreegrid.cpp	12
myOctree::nodes	octreegrid.cpp	14
myOctree::nodes	output.cpp	8
myOctree::nx_block	block.cpp	10
myOctree::nx_block	ghost.cpp	12
myOctree::nx_block	poisson.cpp	13
myOctree::ny_block	block.cpp	11
myOctree::ny_block	ghost.cpp	13
myOctree::ny_block	poisson.cpp	14
myOctree::nz_block	block.cpp	12
myOctree::nz_block	ghost.cpp	14
myOctree::nz_block	poisson.cpp	15
myOctree::pad	block.cpp	7
myOctree::pad	ghost.cpp	11
myOctree::pad	multigrid.cpp	12
myOctree::pad	poisson.cpp	16
myOctree::refine_nodes	adapt.cpp	/^void refine_nodes() {$/
myOctree::root_nodes	octreegrid.cpp	16
myOctree::scalar_fields	block.cpp	8
myOctree::scalar_fields	ghost.cpp	15
myOctree::set_FieldBc_FieldBcVal	boundary.cpp	/^void set_FieldBc_FieldBcVal(int number, std::strin/
myOctree::vector_fields	block.cpp	9
myOctree::vector_fields	ghost.cpp	16
neumann	boundary.h	20
node_boundary_flags	boundary.h	7
none	boundary.h	18
position	direction.h	15
print_neighbour_information	octreegrid.cpp	/^void print_neighbour_information(std::list<Octree*/
prolongate_domain	multigrid.cpp	/^void prolongate_domain(int level, std::string name/
prolongate_domain_for_child	multigrid.cpp	/^void prolongate_domain_for_child(Octree* node, int/
prolongate_ghost	multigrid.cpp	/^void prolongate_ghost(int level, std::string name)/
prolongate_ghost_for_child	multigrid.cpp	/^void prolongate_ghost_for_child(Octree* node, int /
read_blocks	input.cpp	/^int read_blocks(ifstream& file) {$/
read_input_file	input.cpp	/^void read_input_file() {$/
read_max_level	input.cpp	/^void read_max_level(ifstream& file) {$/
read_scalar_field_Bc	input.cpp	/^void read_scalar_field_Bc(ifstream& file, int numb/
read_scalar_fields	input.cpp	/^void read_scalar_fields(ifstream& file) {$/
read_vector_field_Bc	input.cpp	/^void read_vector_field_Bc(ifstream& file, int numb/
read_vector_fields	input.cpp	/^void read_vector_fields(ifstream& file) {$/
reassign_neighbours	octreegrid.cpp	/^void reassign_neighbours() {$/
recheck_siblings_coarsen_flags	adapt.cpp	/^void recheck_siblings_coarsen_flags() {$/
reset_coarsen_flags	adapt.cpp	/^void reset_coarsen_flags() {$/
reset_refine_flags	adapt.cpp	/^void reset_refine_flags() {$/
restrict	multigrid.cpp	/^void restrict(int level, std::string name) {$/
restrict_from_child	multigrid.cpp	/^void restrict_from_child(Octree* node, Octree* chi/
set_VecFieldBc_VecFieldBcVal	boundary.cpp	/^void set_VecFieldBc_VecFieldBcVal(int number, std:/
set_coarsen_flag_based_on_gradient	adapt.cpp	/^void set_coarsen_flag_based_on_gradient() {$/
set_field	amrsolver.cpp	/^void set_field() {$/
set_refine_flag_based_on_gradient	adapt.cpp	/^void set_refine_flag_based_on_gradient() {$/
set_root_neighbours	octreegrid.cpp	/^void set_root_neighbours() {$/
std	input.cpp	12
std	output.cpp	10
std::NodeBc_to_string	output.cpp	/^string NodeBc_to_string(myOctree::NodeBc bcc) {$/
std::string_to_NodeBc	input.cpp	/^myOctree::NodeBc string_to_NodeBc(string bc) {$/
string_to_FieldBc	input.cpp	/^myOctree::FieldBc string_to_FieldBc(string bc) {$/
val	field.h	20
write_output_file	output.cpp	/^void write_output_file() {$/
write_vtk	vtk.cpp	/^void write_vtk(std::list<Octree*>& nodes, std::str/
x	vecfield.h	25
y	vecfield.h	26
z	vecfield.h	27
